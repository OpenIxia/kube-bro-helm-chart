apiVersion: cmt.openixia.com/v1alpha1
kind: ConfigMapTemplate
metadata:
  name: {{ template "bro.fullname" . }}-config
  labels:
    app: {{ template "bro.name" . }}
    chart: {{ template "bro.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
configMapName: {{ template "bro.fullname" . }}-cluster-configmap
data:
  cluster-layout.bro: |
    {{ "{{-" }} $controlpods := pods "app={{ template "bro.name" . }},component=control" }}
    {{ "{{-" }} $loggerpods := pods "app={{ template "bro.name" . }},component=logger" }}
    {{ "{{-" }} $managerpods := pods "app={{ template "bro.name" . }},component=manager" }}
    {{ "{{-" }} $proxypods := pods "app={{ template "bro.name" . }},component=proxy" }}
    {{ "{{-" }} $proxycount := len $proxypods }}
    {{ "{{-" }} $workerpods := pods "app={{ template "bro.name" . }},component=worker" }}
    {{ "{{-" }} define "workerset" }}$workers=set(
      {{ "{{-" }} range $i, $a := pods "app={{ template "bro.name" . }},component=worker" -}}
        {{ "{{-" }} if $i }},{{ "{{" }} end -}}
        "{{ "{{-" }} .ObjectMeta.Name -}}"
      {{ "{{-" }} end -}}
    ){{ "{{-" }} end -}}
    # Automatically generated. Do not edit.
    redef Cluster::manager_is_logger = F;
    redef Cluster::nodes = {
      {{ "{{-" }} range $controlpods }}
        ["control"] = [$node_type=Cluster::CONTROL, $ip={{ "{{-" }} .Status.PodIP -}}, $zone_id="", $p=47760/tcp],
      {{ "{{" }}end -}}
      {{ "{{-" }} range $loggerpods }}
        ["logger"] = [$node_type=Cluster::LOGGER, $ip={{ "{{-" }} .Status.PodIP -}}, $zone_id="", $p=47761/tcp],
      {{ "{{" }}end -}}
      {{ "{{-" }} range $managerpods }}
        ["manager"] = [$node_type=Cluster::MANAGER, $ip={{ "{{-" }} .Status.PodIP -}}, $zone_id="", $p=47762/tcp, $logger="logger", {{ "{{" }} template "workerset" }}],
      {{ "{{" }}end -}}
      {{ "{{-" }} range $proxypods }}
        ["{{ "{{-" }} .ObjectMeta.Name -}}"] = [$node_type=Cluster::PROXY, $ip={{ "{{-" }} .Status.PodIP -}}, $zone_id="", $p=47763/tcp, $logger="logger", $manager="manager", {{ "{{" }} template "workerset" }}],
      {{ "{{" }}end -}}
      {{ "{{-" }} range $i, $a := $workerpods }}
        ["{{ "{{-" }} .ObjectMeta.Name -}}"] = [$node_type=Cluster::WORKER, $ip={{ "{{-" }} .Status.PodIP -}}, $zone_id="", $p=47764/tcp, $interface="cloudlens0", $logger="logger", $manager="manager", $proxy="
        {{ "{{-" }} $proxyindex := modulo $i $proxycount }}
        {{ "{{-" }} with index $proxypods $proxyindex }}{{ "{{" }} .ObjectMeta.Name }}{{ "{{" }} end -}}
        "],
      {{ "{{" }}end -}}
    };

  broctl-config.bro: |
    # Automatically generated. Do not edit.
    redef Notice::mail_dest = "root@localhost";
    redef Notice::mail_dest_pretty_printed = "root@localhost";
    redef Notice::sendmail = "";
    redef Notice::mail_subject_prefix = "[Bro]";
    redef Notice::mail_from = "Big Brother <bro@a0095570098c>";
    @if ( Cluster::local_node_type() == Cluster::LOGGER )
    redef Log::default_rotation_interval = 10800 secs;
    redef Log::default_mail_alarms_interval = 86400 secs;
    @endif
    redef Communication::listen_ipv6 = T;
    redef Pcap::snaplen = 8192;
    redef Pcap::bufsize = 128;
    redef global_hash_seed = "215bde1d";

  local-networks.bro: |
    # Automatically generated. Do not edit.
    redef Site::local_nets = {
        {{ .Values.clusterCidr }} ,  # Private IP space
        {{- range .Values.localCidrs }}
        {{ . }},
        {{ end -}}
    };

  relauncher.sh: |
    #!/bin/bash
    sigint_handler()
    {
      kill $PID
      exit
    }

    kill_on_change()
    {
      PID=$1
      echo "Will kill process $PID on config change"
      inotifywait -e modify -e move -e create -e delete -r /opt/bro/spool/installed-scripts-do-not-touch
      echo "Killing process $PID due to config change"
      kill $PID
    }

    trap sigint_handler SIGINT

    PID=0
    while true; do
      echo "Running $@"
      $@ &
      PID=$!
      echo "Started as process $PID"
      kill_on_change $PID &
      monitor=$!
      wait $PID
      ec=$?
      # if the process exited other than because we killed it due to config
      # change, adopt its exit code
      if kill -0 $monitor; then echo "Exiting with $ec due to unexpected exit"; exit $ec; fi
      echo "Process $PID exited due to config change, will restart"
    done
